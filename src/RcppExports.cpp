// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Cov_S_hat_infty1_S_hat_infty2_cpp
double Cov_S_hat_infty1_S_hat_infty2_cpp(IntegerVector J_s, IntegerVector K_s, NumericVector g_s, NumericVector h_s, IntegerVector Index_S_hat_infty1_s, IntegerVector Index_S_hat_infty2_s, NumericVector epsilon_s, NumericVector m_s, NumericVector s_squared_s, NumericVector v_s, int n, IntegerVector Number_of_Est_s);
RcppExport SEXP _glrm_Cov_S_hat_infty1_S_hat_infty2_cpp(SEXP J_sSEXP, SEXP K_sSEXP, SEXP g_sSEXP, SEXP h_sSEXP, SEXP Index_S_hat_infty1_sSEXP, SEXP Index_S_hat_infty2_sSEXP, SEXP epsilon_sSEXP, SEXP m_sSEXP, SEXP s_squared_sSEXP, SEXP v_sSEXP, SEXP nSEXP, SEXP Number_of_Est_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type J_s(J_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type K_s(K_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g_s(g_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h_s(h_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Index_S_hat_infty1_s(Index_S_hat_infty1_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Index_S_hat_infty2_s(Index_S_hat_infty2_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type epsilon_s(epsilon_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_squared_s(s_squared_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Number_of_Est_s(Number_of_Est_sSEXP);
    rcpp_result_gen = Rcpp::wrap(Cov_S_hat_infty1_S_hat_infty2_cpp(J_s, K_s, g_s, h_s, Index_S_hat_infty1_s, Index_S_hat_infty2_s, epsilon_s, m_s, s_squared_s, v_s, n, Number_of_Est_s));
    return rcpp_result_gen;
END_RCPP
}
// Test_cpp
double Test_cpp(IntegerVector J_s, IntegerVector K_s, NumericVector g_s, NumericVector h_s, IntegerVector Index_S_s, IntegerVector Index_r_s, NumericVector epsilon_s, NumericVector m_s, NumericVector s_squared_s, NumericVector v_s, int n, IntegerVector Number_of_Est_s);
RcppExport SEXP _glrm_Test_cpp(SEXP J_sSEXP, SEXP K_sSEXP, SEXP g_sSEXP, SEXP h_sSEXP, SEXP Index_S_sSEXP, SEXP Index_r_sSEXP, SEXP epsilon_sSEXP, SEXP m_sSEXP, SEXP s_squared_sSEXP, SEXP v_sSEXP, SEXP nSEXP, SEXP Number_of_Est_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type J_s(J_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type K_s(K_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g_s(g_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h_s(h_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Index_S_s(Index_S_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Index_r_s(Index_r_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type epsilon_s(epsilon_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_squared_s(s_squared_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Number_of_Est_s(Number_of_Est_sSEXP);
    rcpp_result_gen = Rcpp::wrap(Test_cpp(J_s, K_s, g_s, h_s, Index_S_s, Index_r_s, epsilon_s, m_s, s_squared_s, v_s, n, Number_of_Est_s));
    return rcpp_result_gen;
END_RCPP
}
// CreateM_cpp
NumericVector CreateM_cpp(IntegerVector J_s, IntegerVector Number_of_Est_s, IntegerVector K_s, NumericVector g_s, NumericVector epsilon_s, NumericVector m_s, NumericVector s_squared_s, NumericVector v_s, int n);
RcppExport SEXP _glrm_CreateM_cpp(SEXP J_sSEXP, SEXP Number_of_Est_sSEXP, SEXP K_sSEXP, SEXP g_sSEXP, SEXP epsilon_sSEXP, SEXP m_sSEXP, SEXP s_squared_sSEXP, SEXP v_sSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type J_s(J_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Number_of_Est_s(Number_of_Est_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type K_s(K_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g_s(g_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type epsilon_s(epsilon_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_squared_s(s_squared_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateM_cpp(J_s, Number_of_Est_s, K_s, g_s, epsilon_s, m_s, s_squared_s, v_s, n));
    return rcpp_result_gen;
END_RCPP
}
// CreateQ_cpp
NumericVector CreateQ_cpp(IntegerVector J_s, IntegerVector Number_of_Est_s, IntegerVector K_s, NumericVector epsilon_s, NumericVector m_s, NumericVector s_squared_s, NumericVector v_s, int n);
RcppExport SEXP _glrm_CreateQ_cpp(SEXP J_sSEXP, SEXP Number_of_Est_sSEXP, SEXP K_sSEXP, SEXP epsilon_sSEXP, SEXP m_sSEXP, SEXP s_squared_sSEXP, SEXP v_sSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type J_s(J_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Number_of_Est_s(Number_of_Est_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type K_s(K_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type epsilon_s(epsilon_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_squared_s(s_squared_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateQ_cpp(J_s, Number_of_Est_s, K_s, epsilon_s, m_s, s_squared_s, v_s, n));
    return rcpp_result_gen;
END_RCPP
}
// CreateR_cpp
NumericVector CreateR_cpp(IntegerVector J_s, IntegerVector Number_of_Est_s, IntegerVector K_s, NumericVector epsilon_s, NumericVector m_s, NumericVector s_squared_s, NumericVector v_s, int n);
RcppExport SEXP _glrm_CreateR_cpp(SEXP J_sSEXP, SEXP Number_of_Est_sSEXP, SEXP K_sSEXP, SEXP epsilon_sSEXP, SEXP m_sSEXP, SEXP s_squared_sSEXP, SEXP v_sSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type J_s(J_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Number_of_Est_s(Number_of_Est_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type K_s(K_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type epsilon_s(epsilon_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_squared_s(s_squared_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateR_cpp(J_s, Number_of_Est_s, K_s, epsilon_s, m_s, s_squared_s, v_s, n));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSE_bullet_GLR_cpp
NumericVector Sim_MSE_bullet_GLR_cpp(NumericVector S_sim, NumericVector v_sim, int n, long NumberOfSimulations, NumericVector K_s, NumericVector J_s, IntegerVector Number_of_Est_s, NumericVector h_s, NumericVector g_s, NumericVector v_s, NumericVector m_s, NumericVector s_squared_s);
RcppExport SEXP _glrm_Sim_MSE_bullet_GLR_cpp(SEXP S_simSEXP, SEXP v_simSEXP, SEXP nSEXP, SEXP NumberOfSimulationsSEXP, SEXP K_sSEXP, SEXP J_sSEXP, SEXP Number_of_Est_sSEXP, SEXP h_sSEXP, SEXP g_sSEXP, SEXP v_sSEXP, SEXP m_sSEXP, SEXP s_squared_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type S_sim(S_simSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_sim(v_simSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< long >::type NumberOfSimulations(NumberOfSimulationsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type K_s(K_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type J_s(J_sSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Number_of_Est_s(Number_of_Est_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type h_s(h_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g_s(g_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_squared_s(s_squared_sSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSE_bullet_GLR_cpp(S_sim, v_sim, n, NumberOfSimulations, K_s, J_s, Number_of_Est_s, h_s, g_s, v_s, m_s, s_squared_s));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSE_bullet_LR_cpp
NumericVector Sim_MSE_bullet_LR_cpp(NumericVector S_sim, NumericVector v_sim, int n, long NumberOfSimulations, NumericVector W_s, NumericVector v_s, NumericVector m_s);
RcppExport SEXP _glrm_Sim_MSE_bullet_LR_cpp(SEXP S_simSEXP, SEXP v_simSEXP, SEXP nSEXP, SEXP NumberOfSimulationsSEXP, SEXP W_sSEXP, SEXP v_sSEXP, SEXP m_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type S_sim(S_simSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_sim(v_simSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< long >::type NumberOfSimulations(NumberOfSimulationsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W_s(W_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSE_bullet_LR_cpp(S_sim, v_sim, n, NumberOfSimulations, W_s, v_s, m_s));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSE_LR_canonical_cpp
NumericVector Sim_MSE_LR_canonical_cpp(NumericVector S_sim, NumericVector v_sim, int n, long NumberOfSimulations, NumericVector v_s, NumericVector m_s);
RcppExport SEXP _glrm_Sim_MSE_LR_canonical_cpp(SEXP S_simSEXP, SEXP v_simSEXP, SEXP nSEXP, SEXP NumberOfSimulationsSEXP, SEXP v_sSEXP, SEXP m_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type S_sim(S_simSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_sim(v_simSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< long >::type NumberOfSimulations(NumberOfSimulationsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSE_LR_canonical_cpp(S_sim, v_sim, n, NumberOfSimulations, v_s, m_s));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSE_CL_cpp
NumericVector Sim_MSE_CL_cpp(NumericVector S_sim, int n, long NumberOfSimulations, NumericVector v_s, NumericVector m_s);
RcppExport SEXP _glrm_Sim_MSE_CL_cpp(SEXP S_simSEXP, SEXP nSEXP, SEXP NumberOfSimulationsSEXP, SEXP v_sSEXP, SEXP m_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type S_sim(S_simSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< long >::type NumberOfSimulations(NumberOfSimulationsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v_s(v_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type m_s(m_sSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSE_CL_cpp(S_sim, n, NumberOfSimulations, v_s, m_s));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_glrm_Cov_S_hat_infty1_S_hat_infty2_cpp", (DL_FUNC) &_glrm_Cov_S_hat_infty1_S_hat_infty2_cpp, 12},
    {"_glrm_Test_cpp", (DL_FUNC) &_glrm_Test_cpp, 12},
    {"_glrm_CreateM_cpp", (DL_FUNC) &_glrm_CreateM_cpp, 9},
    {"_glrm_CreateQ_cpp", (DL_FUNC) &_glrm_CreateQ_cpp, 8},
    {"_glrm_CreateR_cpp", (DL_FUNC) &_glrm_CreateR_cpp, 8},
    {"_glrm_Sim_MSE_bullet_GLR_cpp", (DL_FUNC) &_glrm_Sim_MSE_bullet_GLR_cpp, 12},
    {"_glrm_Sim_MSE_bullet_LR_cpp", (DL_FUNC) &_glrm_Sim_MSE_bullet_LR_cpp, 7},
    {"_glrm_Sim_MSE_LR_canonical_cpp", (DL_FUNC) &_glrm_Sim_MSE_LR_canonical_cpp, 6},
    {"_glrm_Sim_MSE_CL_cpp", (DL_FUNC) &_glrm_Sim_MSE_CL_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_glrm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
